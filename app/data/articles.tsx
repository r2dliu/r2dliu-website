const autocancelMarkdown =
  "Last edited September 13th, 2019, by David \"R2DLiu\" Liu\n\n *If you pause Gfycat, you can advance frame by frame!*\n\n # Introduction \n\n Fox is one of the best and most versatile characters in the game. One often overlooked aspect of his gameplay is his effective use of autocancels in various scenarios. Though not as obstrusive as those of say, Sheik or Falco, they still come up quite often and are often instrumental, though some of these are admittedly a bit niche. In this article, I'll go through and describe and evaluate some of these situations, and hopefully impart some useful information.\n\n # What is Autocancelling? \n\n For those who might not know, autocancelling, abbreviated henceforth as AC, is a technique where one lands during certain startup frames or certain ending frames of an aerial attack. Landing during these frame windows causes the character to land with only four frames of lag without requiring any additional inputs, unlike an L-cancel. The way I like to think about it is that landing during an autocancel window is basically the same as if you had jumped and landed without doing an aerial at all! You can read more details and find some more examples [here](https://www.ssbwiki.com/Auto-canceling).\n\n The important takeaway is that autocancels can let you move faster while landing from an aerial, opening the door for all kind of mix-ups and techniques. \n\n # Autocancel Up-Air\n\n Up-air is a fantastic tool for Fox. It kills, combos, looks swaggy, it does it all. It lasts a total of 39 frames, hitting on frames 8-9 and 11-14. It autocancels before frame 7 and after frame 26, with 9 frames of L-cancelled lag.\n\n ## Sharking Top Platform\n\n Fox’s uair boasts decent range + disjoint, good combo potential at lower percents, and high kill potential at higher percents. This makes it a very good candidate for approaching opponents on platforms from below. In particular, uair is extremely good at hitting characters on top platform. A full hop into instant uair followed by a fast fall easily land during the autocancel window. On top of all of this, most characters don’t have good hitboxes that reach below them, so this is pretty safe to just throw out constantly and get rapid fire hitboxes that can net you more or less free combos/kills. This works particularly well on Yoshi's, where you can reach top platform with just your full hop. On stages like Battlefield or Dreamland, you can still accomplish something similar by rolling both jump buttons or using tap jump with a jump button to get an instant double jump, allowing you to poke top platform with an uair and fall into an autocancel afterwards.\n\n Some useful scenarios to watch out for include: catching shield drops, catching attempts to escape to the side platforms, and shield pokes/pushoffs. These are just a few of many situations, but generally the idea is that this is a very advantageous situation for Fox, with little likelihood of getting reversal’d, with lots of opportunities for reads and mixups after the autocancel leaves you so actionable. Even getting hit out of it usually leaves the opponent with little chance to followup and permits you to safely reset to neutral.\n\n <iframe src='https://gfycat.com/ifr/warmheartedcleanjenny?hd=1' frameBorder='0' scrolling='no' width='640px' height='480px' allowFullScreen></iframe><figcaption>Some toy examples of sharking with uair. Every uair here autocancels afterward, leaving generous amounts of time for mixups or followups</figcaption> \n\n ## KJH Aerial Interrupt \n\n This piece of tech utilizes what is known as an aerial interrupt. The simplified explanation is that by dropping low from ledge, double jumping, and uairing barely above the ledge, Fox can land during the uair, autocancelling it and leaving him actionable four frames afterward. This is an unreactable mixup because it looks almost exactly like refreshing near the ledge, and is dangerous for the opponent to contest because they would be in ledgedash -> attack range.\n\n <iframe src='https://gfycat.com/ifr/corruptdifferenticelandgull?hd=1' frameBorder='0' scrolling='no' width='640px' height='480px' allowFullScreen></iframe> \n\n Watch KJH’s amazing video [here](https://www.youtube.com/watch?v=66KCwTJLtj8), which has many more examples and more detailed explanation.\n\n ## Platform Techchasing \n\n Similarly to KJH's tech, you can also take advantage of uair's early autocancel window to tech chase. By performing an uair right before landing while full jumping to a platform, you can leave yourself actionable for a followup. This is faster than wavelanding depending on the stage (a handful of frames faster on Dreamland, one frame faster on Battlefield, varies on Fountain). This is arguably superior to both regular jump + fast fall as well as wavelanding. Wavelanding needs to be frame perfect to be as fast as possible, and even then is usually slower. Airdodging too early results in a complete loss of the techchase situation. Doing an uair instead of just jumping and landing prevents you from accidentally falling through the platform from your fastfall input and ensures you land on the platform. \n\n <iframe src='https://gfycat.com/ifr/illancientilladopsis?hd=1' frameBorder='0' scrolling='no' width='640px' height='480px' allowFullScreen></iframe><figcaption>AC uair tech chase</figcaption> \n\n Side note: Some of you might be wondering about laser lands. Laser landing can be significantly faster for going from ground to top platform because of the no impact land, but uair is just as good for going from ground to side platform or side platform to top platform, since there is no way to achieve a fast NIL in these scenarios and both uair and laser drag your ECB down. Importantly, uair is also much less reactable for the opponent. The initial animation doesn’t look that different from Fox’s jump, whereas laser has a very distinct beginning animation where he pulls out the gun. The laser also has an easily distinguishable audio cue, whereas early AC uair has none. \n\n # Autocancel Back-Air \n\n Back-air is an absolutely ridiculous move. It, too, can kill, combo, and look swaggy. It has an enormous hitbox and stays active forever. It lasts a total of 39 frames, hitting on frames 4-19(!). It autocancels before frame 3 and after frame 24, with 10 frames of L-cancelled lag. \n\n ## Center Stage Walling \n\n Like the sharking uair mentioned earlier, full hop instant back-air also autocancels with a fast fall, with lots of leniency. This typically reaches around platform height, and is great for walling out all kinds of approaches. \n\n <iframe src='https://gfycat.com/ifr/linearsizzlingafricanharrierhawk?hd=1' frameBorder='0' scrolling='no' width='640px' height='480px' allowFullScreen></iframe>\n\n AC bair is also incredibly useful for setting up all kinds of weak hit combos. This is pretty self-explanatory. \n\n <iframe src='https://gfycat.com/ifr/amazingrelievedgossamerwingedbutterfly?hd=1' frameBorder='0' scrolling='no' width='640px' height='480px' allowFullScreen></iframe>\n\n ## Shield Pressure \n\n Like Falco, Fox can set up shield pressure with a AC bair. Note that neither Fox nor Falco AC bair are quite as safe as late aerials and have plenty of counterplay, but when set up correctly they’re only slightly negative on block and can catch people pressing buttons. But unlike Falco, Fox cannot auto cancel his bair out of short hop. Instead, he can only setup this AC pressure in a few select situations with full hop. Here’s some toy examples. \n\n <iframe src='https://gfycat.com/ifr/shamefulmessydrake?hd=1' frameBorder='0' scrolling='no' width='640px' height='480px' allowFullScreen></iframe>\n\n This situation is particularly good because many players aren’t expecting this pressure to be safe, and often aren’t ready to be shined off the side of the platform. I’ve gotten a lot of shinespikes and low percent gimps this way. \n\n You can set this kind of pressure up on the ground also. This often baits the opponent into move out of shield after what appears to be a laggy early bair and results in them getting shined. You can also react and punish rolls. Watch out though: this grounded version is \n\n 1. Much more difficult to time than the platform version \n\n 2. Can sometimes miss shorter characters or dash dancing opponents, and \n\n 3. Is much easier to react to and crouch cancel. \n\n <iframe src='https://gfycat.com/ifr/anxiouslongcormorant?hd=1' frameBorder='0' scrolling='no' width='640px' height='480px' allowFullScreen></iframe><figcaption>Grounded AC bair shield pressure mixups</figcaption>\n\n Overall though, these are unusual patterns that most players aren't used to seeing from Fox, and bair is usually one of Fox's laggier moves that people can whiff punish best. AC bair shield pressure can be as good as only -1 on block. \n\n ## Edgeguarding \n\n Autocancelling bair plays a large role in edgeguarding. There are a couple different timings for this, but done correctly, rising bair from ledge can autocancel with a pretty lenient window, even if you drop low enough to cover low/horizontal recoveries. The low lag of autocancel ensures you’ll have time to cover a high recovery onto stage or a drift back to ledge afterward. This is particularly good vs spacies, and is probably the best default edgeguard for opponents you don’t have a read on. It doesn't cover 100% of options, but covers maybe 80+% of them, and sets you up for future reads for the other 20%. \n\n <iframe src='https://gfycat.com/ifr/limpspryfrillneckedlizard?hd=1' frameBorder='0' scrolling='no' width='640px' height='480px' allowFullScreen></iframe><figcaption>Some AC bair edgeguard flowcharts </figcaption>\n\n # Other Aerials/Conclusion \n\n Nair and fair don't autocancel even out of fullhops. Dair has some extremely niches uses where a full hop instant drill can auto cancel without a fast fall, taking on kind of a similar role as a full hop pull back nair that can't be crouch cancelled, but it's easily reactable and can be punished by jumping into it. I don't personally use these moves in situations that I feel are as useful as the others. \n\n Many of the situations I covered are pretty well known, while some might be a little more unusual. Try incorporating them and discovering usages for your own variations. If you have a more unique scenario I didn't cover, I'd love to hear about it; you can DM or tweet at me on [Twitter](https://twitter.com/R2_DLiu). Thanks for reading!";

const ledgedashMarkdown =
  "Last edited September 13th, 2019, by David \"R2DLiu\" Liu\n\n *If you pause Gfycat, you can advance frame by frame!*\n\n # Introduction \n\n Ledgedashing has become a staple in the modern era of Melee. It stands as the objectively best option from ledge for nearly every character in the game, but failure to execute often results in huge punishes or even a self-destruct. As a result, even the best players in the world often resort to low effort but less risky options from ledge (SFAT ledgedash, Mang0 double laser). Some players, however, seem to be incredibly consistent and accurate with their ledgedashing (Leffen, Plup). This article will explain why ledgedashing seems to be so inconsistent for some players and less so for others. It will explain the best methods for ledgedashing from a human standpoint, and in particular how the Potentiometer Oddity Degradation Effect, i.e PODE, can affect your ledgedashing. \n\n At one point, I was switching to and from various controllers after my main controller began acting erratically. Specifically, I couldn’t ledgedash as well as I used to, and I was fairly confident about the accuracy of my inputs. I chalked it up to the control stick becoming looser with age (I’ve been using it for about 2 years now), and resolved to learn to ledgedash with alternate methods in order to ledgedash more consistently across controllers. However, as I continued to test with my controller and a variety of potential substitutes I came across some very interesting phenomenon and realizations on why my inputs did what they did. \n\n # PODE \n\n [PODE](https://twitter.com/kadano/status/952672880512372736), or the potentiometer oddity degradation effect, is a phenomenon which causes control stick inputs to be read in a delayed fashion, meaning some inputs are “skipped” if you move the control stick fast enough. As I switched from controller to controller, some of which had PODE and some of which did not, I noticed that they had an incredibly tangible effect on my ledgedashing. I first learned to ledgedash with the “optimal ledgedash angle”, described here by Kadano. As I tested this method on various controllers, I was struck that some controllers kept doing regular get up, while one controller in particular never failed to let go of ledge, no matter how far I pushed the angle, far past what Kadano had documented. Eventually, I turned on the input viewer in 20XX and saw what was happening. To demonstrate, I perform a single input diagonally downward and to the right. The potentiometer, however, reads something very different. Let's examine the input display. Use Gfycat's speed controls for more visibility. \n\n <iframe src='https://gfycat.com/ifr/delayedembellishedbull?hd=1' frameBorder='0' scrolling='no' width='640px' height='480px' allowFullScreen></iframe><figcaption>In theory, a single diagonal down right input...</figcaption>\n\n The controller I was using has strong horizontal PODE, so left/right inputs are delayed in a manner similar to buffering. However, vertical inputs are unaffected, so even for angle close to horizontal, the control stick first registers a nearly straight down input, then jumps to the horizontal angle. This results in amazing ledgedashes using the Kadano method, since it pretty much never does regular get up and guarantees a drop from ledge. Here are the numbers, frame by frame, for an input down and to the right.\n\n ![Graphic showing X and Y readings with X input delayed until frame 3](https://s3.r2dliu.com/assets/articles/ledgedash/pode.jpg)";

export const articleData = {
  ledgedash: {
    title: "PODE & Ledgedashing",
    markdown: ledgedashMarkdown,
  },
  autocancel: {
    title: "Fox Autocancel Aerials",
    markdown: autocancelMarkdown,
  },
};
